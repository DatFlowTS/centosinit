#!/bin/bash

export LOGFILE=$HOME/init_$(date +%F).log

sudo tee /etc/yum.repos.d/ol8-epel.repo<<EOF
[ol8_developer_EPEL]
name= Oracle Linux \$releasever EPEL (\$basearch)
baseurl=https://yum.oracle.com/repo/OracleLinux/OL8/developer/EPEL/\$basearch/
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-oracle
gpgcheck=1
enabled=1
EOF
yum install -y zsh dnf wget curl dnf-plugins-core git gcc-c++ \
make nc chrony rsync zip xorg-x11-fonts-base  \
mlocate perl-Data-Dumper perl-Env lsof at traceroute mc mutt \
xorg-x11-server-utils xterm tcpdump telnet tigervnc-server vim-enhanced \
perl-XML-Parser perl-Digest-MD5 gcc iotop tmux vim firefox &>> $LOGFILE
wget --no-check-certificate https://public-yum.oracle.com/repo/OracleLinux/OL6/latest/x86_64/getPackage/xorg-x11-twm-1.0.3-5.1.el6.x86_64.rpm &>> $LOGFILE
dnf localinstall -y xorg-x11-twm-1.0.3-5.1.el6.x86_64.rpm &>> $LOGFILE
dnf makecache &>> $LOGFILE
rm -rf $HOME/.*ssh* $HOME/.*zsh* /etc/skel/.*ssh* /etc/skel/.*zsh* &>> $LOGFILE
wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh &>> $LOGFILE
sed -i 's/RUNZSH=\${RUNZSH:-yes}/RUNZSH=\${RUNZSH:-no}/g' install.sh
sed -i 's/RUNZSH=yes/RUNZSH=no/g' install.sh
sed -i '352,360d' install.sh
sh install.sh &>> $LOGFILE
rm -f install.sh
sed -i 's/robbyrussell/agnoster/g' $HOME/.zshrc
sed -i 's/\/root/\$HOME/g' $HOME/.zshrc
echo "" >> $HOME/.zshrc
echo "############################################" >> $HOME/.zshrc
echo "############################################" >> $HOME/.zshrc
echo "" >> $HOME/.zshrc
echo "# some customizations following here" >> $HOME/.zshrc
echo 'export PATH="$HOME/sbin:$HOME/.local/sbin:$HOME/bin:$HOME/.local/bin:/usr/local/bin:/usr/local/sbin:$PATH"' >> $HOME/.zshrc
echo 'neofetch' >> $HOME/.zshrc
echo "alias clear='clear;neofetch'" >> $HOME/.zshrc
cp -afv $HOME/.*zsh* /etc/skel/ &>> $LOGFILE
mkdir $HOME/.ssh;cd $HOME/.ssh
curl https://github.com/datflowts.keys | tee -a authorized_keys &>> $LOGFILE
sed -i 's/PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config
sed -i 's/#PasswordAuthentication/PasswordAuthentication/g' /etc/ssh/sshd_config
cp -afv $HOME/.*ssh* /etc/skel/ &>> $LOGFILE
sed -i 's/bash/zsh/g' /etc/default/useradd
usermod --shell /bin/zsh root
cd /usr/local/bin
echo "#\!/bin/zsh" > update
echo "" >> update
echo "# Optionally you can pass an argument for dnf, e.g. '--nobest'" >> update
echo 'dnf -y upgrade --refresh $@ >> /dev/null;dnf clean all >> $HOME/update_$(date +%F).log' >> update
echo 'sudo curl -s https://raw.githubusercontent.com/dylanaraps/neofetch/master/neofetch -o /usr/bin/neofetch >> $HOME/update_$(date +%F).log' >> update
echo "chmod 555 /usr/bin/neofetch" >> update
echo 'echo "Finished! Your system is up2date now! Reboot recommended."' >> update
echo 'echo "You can find details in $HOME/update_$(date +%F).log."' >> update
cd ~
git clone https://github.com/powerline/fonts.git --depth=1 &>> $LOGFILE
cd fonts
./install.sh &>> $LOGFILE
cd ..
rm -rf fonts
cp -afv $HOME/.local /etc/skel/ &>> $LOGFILE
chmod -v 555 /usr/local/bin/**
touch .hushlogin
touch /etc/skel/.hushlogin
dnf -y install tigervnc-server &>> $LOGFILE
cp /lib/systemd/system/vncserver@.service /etc/systemd/system/vncserver@:1.service &>> $LOGFILE
echo ":1=root"  >> /etc/tigervnc/vncserver.users
firewall-cmd --add-service=vnc-server &>> $LOGFILE
firewall-cmd --permanent --add-service=vnc-server &>> $LOGFILE
firewall-cmd --reload &>> $LOGFILE
systemctl daemon-reload &>> $LOGFILE
setenforce 0
sed -i --follow-symlinks 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config
export PREINSTRPM=oracle-database-preinstall-19c
dnf install -y $PREINSTRPM 
update --best
dnf install -y elfutils-libelf-devel fontconfig-devel libXrender-devel librdmacm-devel python3-rtslib targetcli libvirt-devel libvirt-libs
dnf install -y libnsl libnsl.i686 libnsl2 libnsl2.i686
systemctl stop firewalld
systemctl disable firewalld
for TS in ntp2.hetzner.de ntp1.hetzner.de time2.apple.com time1.apple.com; do
  sed -i "1s/^/server $TS iburst\n/" /etc/chrony.conf
  TSLIST=$TS" "$TSLIST
done
systemctl enable --now chronyd &>> $LOGFILE
systemctl enable --now vncserver@:1.service &>> $LOGFILE # will fail, but it's ok for now
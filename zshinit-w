#!/bin/zsh

rm -rf $HOME/.*ssh* $HOME/.*zsh* /etc/skel/.*ssh* /etc/skel/.*zsh* &>> $LOGFILE
wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh &>> $LOGFILE
sed -i 's/RUNZSH=\${RUNZSH:-yes}/RUNZSH=\${RUNZSH:-no}/g' install.sh
sed -i 's/RUNZSH=yes/RUNZSH=no/g' install.sh
sed -i '352,360d' install.sh
sh install.sh &>> $LOGFILE
rm -f install.sh
sed -i 's/robbyrussell/agnoster/g' $HOME/.zshrc
sed -i 's/\/root/\$HOME/g' $HOME/.zshrc
echo "" >> $HOME/.zshrc
echo "############################################" >> $HOME/.zshrc
echo "############################################" >> $HOME/.zshrc
echo "" >> $HOME/.zshrc
echo "# some customizations following here" >> $HOME/.zshrc
echo 'export PATH="$HOME/sbin:$HOME/.local/sbin:$HOME/bin:$HOME/.local/bin:/usr/local/bin:/usr/local/sbin:$PATH"' >> $HOME/.zshrc
echo 'neofetch' >> $HOME/.zshrc
echo "alias clear='clear;neofetch'" >> $HOME/.zshrc
cp -afv $HOME/.*zsh* /etc/skel/ &>> $LOGFILE
mkdir $HOME/.ssh;cd $HOME/.ssh
curl https://github.com/datflowts.keys | tee -a authorized_keys &>> $LOGFILE
cp -afv $HOME/.*ssh* /etc/skel/ &>> $LOGFILE
cd /usr/local/bin
echo "#\!/bin/zsh" > update
echo "" >> update
echo "# Optionally you can pass an argument for dnf, e.g. '--nobest'" >> update
echo 'dnf -y upgrade --refresh $@ &>> $HOME/update_$(date +%F).log;dnf clean all >> /dev/null' >> update
echo "mkdir install;cd install" >> update
echo 'wget https://install.speedtest.net/app/cli/ookla-speedtest-1.1.1-linux-x86_64.tgz &>> $HOME/update_$(date +%F).log' >> update
echo "tar -xvf ookla-speedtest-1.1.1-linux-x86_64.tgz >> /dev/null" >> update
echo 'chmod 555 speedtest;cp speedtest /usr/local/bin/ &>> $HOME/update_$(date +%F).log' >> update
echo "cd ..;rm -r install" >> update
echo 'sudo curl -s https://raw.githubusercontent.com/dylanaraps/neofetch/master/neofetch -o /usr/bin/neofetch &>> $HOME/update_$(date +%F).log' >> update
echo "chmod 555 /usr/bin/neofetch" >> update
echo 'echo "Finished! Your system is up2date now! Reboot recommended."' >> update
echo 'echo "You can find details in $HOME/update_$(date +%F).log."' >> update
cd ~
git clone https://github.com/powerline/fonts.git --depth=1 &>> $LOGFILE
cd fonts
./install.sh &>> $LOGFILE
cd ..
rm -rf fonts
cp -afv $HOME/.local /etc/skel/ &>> $LOGFILE
chmod -v 555 /usr/local/bin/**
touch .hushlogin
touch /etc/skel/.hushlogin
echo '#############################################################'
echo '#############################################################'
echo '#############################################################'
echo "How should the username of the default user (with sudo privileges) be?"
echo
read USRNAME
LOCK=0
while [[ "$LOCK" -eq "0" ]]; do
    if [[ "$USRNAME" =~ ^([0-9]{0,31}[[:lower:]]{1,32}[0-9]{0,31}){1,32}$ ]]; then
        if [[ "$USRNAME" == "default" ]] | [[ "$USRNAME" == "cancel" ]]; then
            $USRNAME = 'default0'
        fi
        LOCK=1
    else
        echo "Please provide a valid unix username:"
        echo " - only 1-32 lowercase alphanumeric characters allowed"
        echo " - at least one letter is required"
        echo "Try again or type 'cancel'/'default' to cancel and proceed with the script"
        echo "Then, a user named 'default0' would be created"
        read USRNAME
        LOCK=0
    fi
done
export NEWUSER=$USRNAME
useradd -G wheel $USRNAME
echo "User '$NEWUSER' successfully created!"
env PATH=$PATH:/usr/bin /usr/lib/node_modules/pm2/bin/pm2 startup systemd -u $USRNAME --hp /home/$USRNAME &>> $LOGFILE
pm2 startup &>> $LOGFILE
echo '#############################################################'
echo '#############################################################'
echo '#############################################################'
echo
echo "No we're checking your connection! Please accept with 'yes'!"
echo
echo '#############################################################'
echo '#############################################################'
echo '#############################################################'
speedtest
read -p "Install KDE Plasma Desktop, too? (Y/N, default N) => " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    sh -c "$(curl -fsSL https://raw.github.com/datflowts/centosinit/master/rockykde)"
fi
update '--best --skip-broken --allowerasing' &>> $LOGFILE
echo '#############################################################'
echo '#############################################################'
echo '#############################################################'
echo
echo "Finished! Reboot recommended!"
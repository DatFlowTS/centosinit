#!/bin/zsh

echo "Preparing to set up OhMyZSH...
--------------------------
" 2>&1 | tee -a $LOGFILE
rm -rfv $HOME/.*ssh* $HOME/.*zsh* /etc/skel/.*ssh* /etc/skel/.*zsh* 2>&1 | tee -a $LOGFILE
wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh 2>&1 | tee -a $LOGFILE
sed -i 's/RUNZSH=\${RUNZSH:-yes}/RUNZSH=\${RUNZSH:-no}/g' install.sh
sed -i 's/RUNZSH=yes/RUNZSH=no/g' install.sh
sed -i 's/CHSH=\${CHSH:-yes}/CHSH=\${CHSH:-no}/g' install.sh
sed -i 's/CHSH=yes/CHSH=no/g' install.sh
echo "
--------------------------
Running OhMyZSH installer:
--------------------------
--------------------------
" 2>&1 | tee -a $LOGFILE
sh install.sh 2>&1 | tee -a $LOGFILE
rm -fv install.sh 2>&1 | tee -a $LOGFILE
sed -i 's/robbyrussell/agnoster/g' $HOME/.zshrc
sed -i 's/\/root/\$HOME/g' $HOME/.zshrc
echo "
--------------------------
--------------------------
Appending $HOME/.zshrc with the following content:
--------------------------
"  2>&1 | tee -a $LOGFILE
echo "

############################################
############################################

# some customizations following here
neofetch
alias clear='clear;neofetch'
alias _='sudo '
alias su='su - '
alias ll='ls -lat'
alias llt='ls -laRt'
alias lld='ls -ladRt'
" | tee -a $HOME/.zshrc 2>&1 | tee -a $LOGFILE
echo '
# extending PATH environment
export PATH="$HOME/sbin:$HOME/.local/sbin:$HOME/bin:$HOME/.local/bin:/usr/local/bin:/usr/local/sbin:$PATH"' | tee -a $HOME/.zshrc 2>&1 | tee -a $LOGFILE
rm -rfv $HOME/.zshrc.pre-oh-my-zsh 2>&1 | tee -a $LOGFILE
cp -afv $HOME/.*zsh* /etc/skel/ 2>&1 | tee -a $LOGFILE
mkdir -v $HOME/.ssh 2>&1 | tee -a $LOGFILE;cd $HOME/.ssh
curl https://github.com/datflowts.keys | tee -a authorized_keys 2>&1 | tee -a $LOGFILE
cp -afv $HOME/.*ssh* /etc/skel/ 2>&1 | tee -a $LOGFILE
cd /usr/local/bin
echo "
--------------------------
--------------------------
Setting up 'update' command:
--------------------------
" 2>&1 | tee -a $LOGFILE
touch update
echo "#\!/bin/zsh

# Optionally you can pass an argument for dnf, e.g. '--nobest'
rm -rfv /etc/yum.repos.d/nodesource* &>> $HOME/update_$(date +%F).log
curl -sL https://rpm.nodesource.com/setup_current.x | sudo -E bash - &>> $HOME/update_$(date +%F).log
rm -rfv /usr/bin/neofetch &>> $HOME/update_$(date +%F).log
curl -s https://raw.githubusercontent.com/dylanaraps/neofetch/master/neofetch -o /usr/bin/neofetch &>> $HOME/update_$(date +%F).log
chmod -v 555 /usr/bin/neofetch
dnf -y upgrade --refresh $@ &>> $HOME/update_$(date +%F).log;dnf clean all &>> $HOME/update_$(date +%F).log
echo '
Finished! Your system is up2date now! Reboot recommended.
You can find details in $HOME/update_$(date +%F).log.
' | tee -a $HOME/update_$(date +%F).log
read -p 'Reebot now? (Y/N, default N) => ' -n 1 -r | tee -a $HOME/update_$(date +%F).log
if [[ $REPLY =~ ^[Yy]$ ]]; then
    shutdown -r | tee -a $HOME/update_$(date +%F).log
fi
" | tee -a update 2>&1 | tee -a $LOGFILE
echo "
--------------------------
--------------------------
Yeah, 'update' command is now available!
" 2>&1 | tee -a $LOGFILE
cd ~
echo "
--------------------------
--------------------------
Installing powerline fonts
--------------------------
" 2>&1 | tee -a $LOGFILE
git clone https://github.com/powerline/fonts.git --depth=1 2>&1 | tee -a $LOGFILE
cd fonts
./install.sh 2>&1 | tee -a $LOGFILE
cd ..
rm -rf fonts
cp -afv $HOME/.local /etc/skel/ 2>&1 | tee -a $LOGFILE
chmod -v 555 /usr/local/bin/** 2>&1 | tee -a $LOGFILE
touch .hushlogin
touch /etc/skel/.hushlogin
echo "
#############################################################
#############################################################
#############################################################
Operating as root could be risky. It's recommended to
create other users with sudo privileges and disable root.
So, let's define your default user! 
Please, provide a username ('default' or 'cancel' to create
a user with username 'default0'):
" 2>&1 | tee -a $LOGFILE
read USRNAME 
echo "
--------------------------
checking '$USRNAME' ...
--------------------------
" 2>&1 | tee -a $LOGFILE
LOCK=0
while [[ "$LOCK" -eq "0" ]]; do
    if [[ "$USRNAME" =~ ^([0-9]{0,31}[[:lower:]]{1,32}[0-9]{0,31}){1,32}$ ]]; then
        if [[ "$USRNAME" == "default" ]] | [[ "$USRNAME" == "cancel" ]]; then
            $USRNAME = 'default0'
        fi
        LOCK=1
    else
        echo "Please provide a valid unix username:
- only 1-32 lowercase alphanumeric characters allowed
- at least one alphabetic letter is required
Try again or type 'cancel' or 'default' to cancel and proceed with setup
Then a user named 'default0' will be created" 2>&1 | tee -a $LOGFILE
        read USRNAME
        echo "
--------------------------
checking '$USRNAME' ...
--------------------------
" 2>&1 | tee -a $LOGFILE
        LOCK=0
    fi
done
export NEWUSER=$USRNAME
useradd -G wheel $NEWUSER
echo "
--------------------------
User '$NEWUSER' successfully created!
--------------------------
--------------------------
" 2>&1 | tee -a $LOGFILE
env PATH=$PATH:/usr/bin /usr/lib/node_modules/pm2/bin/pm2 startup systemd -u $NEWUSER --hp /home/$NEWUSER 2>&1 | tee -a $LOGFILE
pm2 startup 2>&1 | tee -a $LOGFILE
echo "
#############################################################
#############################################################
#############################################################

Now we're checking your connection! Please accept with 'yes'!

#############################################################
#############################################################
#############################################################
" 2>&1 | tee -a $LOGFILE
speedtest 2>&1 | tee -a $LOGFILE
read -p "Install KDE Plasma Desktop, too? (Y/N, default N) => " -n 1 -r 2>&1 | tee -a $LOGFILE
echo "" 2>&1 | tee -a $LOGFILE
if [[ $REPLY =~ ^[Yy]$ ]]; then
    sh -c "$(curl -fsSL https://raw.github.com/datflowts/centosinit/master/rockykde)"
fi
update '--best' 2>&1 | tee -a $LOGFILE
echo '
#############################################################
#############################################################
#############################################################
Finished! Reboot recommended!
' 2>&1 | tee -a $LOGFILE
read -p "Reebot now? (Y/N, default N) => " -n 1 -r 2>&1 | tee -a $LOGFILE
if [[ $REPLY =~ ^[Yy]$ ]]; then
    shutdown -r 2>&1 | tee -a $LOGFILE
fi
